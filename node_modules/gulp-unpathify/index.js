/* jshint node:true */

'use strict';

var unpathify       = require('unpathify'),
    gutil           = require('gulp-util'),
    transform       = require('stream').Transform,
    bufferstreams   = require('bufferstreams'),

    PLUGIN_NAME     = 'gulp-unpathify';

function unpathifyTransform() {
    // Returns a callback that handles the buffered content
    return function(err, buffer, cb) {
        if (err) {
            cb(new gutil.PluginError(PLUGIN_NAME, err));
        }
        unpathify(String(buffer), function(result) {
            cb(null, new Buffer(result));
        });
    };
}

function gulpunpathify() {
    var stream = new transform({ objectMode: true });

    stream._transform = function(file, unused, done) {
        // Pass through if null
        if (file.isNull()) {
            stream.push(file);
            done();
            return;
        }

        if (file.isStream()) {
            file.contents = file.contents.pipe(new bufferstreams(unpathifyTransform()));
            stream.push(file);
            done();
        } else {
            unpathify(String(file.contents), function(result) {
                file.contents = new Buffer(result);
                stream.push(file);
                done();
            });
        }
    };

    return stream;
}

module.exports = gulpunpathify;
module.exports.unpathifyTransform = unpathifyTransform;
